$port-size: 32px;

:root{
  --font-family: 'Source Sans Pro', sans-serif;
}

// NORMALIZE
//-----------------------------
*,
*:before,
*:after{
  box-sizing: border-box;
}

input,
textarea{
  font-family: inherit;
  font-size: inherit;
}

input:focus,
textarea:focus{
  outline: none;
}

body {
  background-color: pink;
  margin: 0;
  padding: 0;
  font-family: var(--font-family);
  font-size: 16px;
}

.canvas-engine {
  height: 100vh;
  overflow: hidden;
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  -webkit-touch-callout: none; /* iOS Safari */
  cursor: move;
}

.node-layer,
.link-layer {
  height: 100%;
  width: 100%;
  position: absolute;
  user-select: none;
}

.node-layer {
  background-color: rgba(255, 255, 255, 0.2);
  z-index: 1;
  pointer-events: none;
}

.link-layer {
  overflow: visible;
  background-color: transparent;
  pointer-events: none;
  z-index: 0;
}

// NODE
//-----------------------------
.node {
  background-color: deepskyblue;
  min-width: 250px;
  min-height: 100px;
  border-radius: 5px;
  z-index: 2;
  position: absolute;
  user-select: none;
  -webkit-user-select: none;
  -webkit-touch-callout: none; /* iOS Safari */
  cursor: move;
  pointer-events: all;
}

.node > .node-body{
  padding: 15px;
}

.node-body > *:not(:last-child){
  margin-bottom: 10px;
}

.node-title {
  padding: 10px;
  border-bottom: 2px #fff solid;
  font-weight: 600;
  color: #ffffff;
  text-transform: uppercase;
}

.node-group-node{
  background-color: rgba(#fff, 0.5) !important;
}

.node-group-node > .node-body{
  display: flex;
  flex-direction: column;
}

.node-group-node .node{
  position: relative;
}

.node-group-node > .node-title{
  background-color: #303030;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.node.is-dragging{
  z-index: 3;
}

// LINK
//-----------------------------
.link__wrapper{
  pointer-events: all;
  cursor: pointer;
}

.link__wrapper:not(.on-connection):hover .link-handle{
  opacity: 0.2;
}

.link__wrapper.on-connection {
  pointer-events: none;
}

.link {
  cursor: pointer;
  fill: transparent;
  pointer-events: all;
  stroke: #666;
  stroke-width: 4px;
}

.link-handle{
  fill: transparent;
  pointer-events: all;
  stroke: deepskyblue;
  stroke-width: 30px;
  opacity: 0;
  transition: opacity 200ms;
}

.link.selected {
  stroke: red;
}

// PORT
//-----------------------------
.port {
  background-color: #fff;
  z-index: -1;
  cursor: pointer;
  position: relative;
  pointer-events: all;
  opacity: 1;
}

.port:after{
  content: "";
  position: absolute;
  top: -10px;
  bottom: -10px;
  left: -10px;
  right: -10px;
  background-color: rgba(#fff, 0.5);
  opacity: 0;
}

.port-container{
  position: absolute;
  top: $port-size / -2;
  left: $port-size / -2;
  right: $port-size / -2;
  bottom: $port-size / -2;
  display: flex;
  gap: 20px;
  pointer-events: none;
  z-index: 10;
  justify-content: space-around;
}

.port-container--actionInputPort,
.port-container--actionOutputPort {
  flex-direction: column;
  padding-top: $port-size / 2;
  padding-bottom: $port-size / 2;
}

.port-container--inputPort,
.port-container--outputPort {
  padding-left: $port-size / 2;
  padding-right: $port-size / 2;
}

.port-container--outputPort,
.port-container--actionOutputPort{
  align-items: flex-end;
}

.port-container--inputPort .port,
.port-container--outputPort .port {
  width: $port-size;
  height: $port-size / 2;
}

.port-container--actionInputPort .port,
.port-container--actionOutputPort .port {
  width: $port-size / 2;
  height: $port-size;
}

.port-container--inputPort .port{
  border-top-left-radius: $port-size;
  border-top-right-radius: $port-size;
}

.port-container--outputPort .port{
  border-bottom-left-radius: $port-size;
  border-bottom-right-radius: $port-size;
}

.port-container--actionInputPort .port{
  border-top-left-radius: $port-size;
  border-bottom-left-radius: $port-size;
}

.port-container--actionOutputPort .port{
  border-top-right-radius: $port-size;
  border-bottom-right-radius: $port-size;
}

// PORT TURNING AS DOT SLOT
// TODO: keep or remove
//-----------------------------
/*.port-container--actionInputPort,
.port-container--actionOutputPort{
  top: 40px;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 15px;
  justify-content: flex-start;
  gap: 15px;
}

.port-container--actionInputPort .port,
.port-container--actionOutputPort .port{
  border-radius: 50%;
  width: $port-size / 2;
  height: $port-size / 2;
}

.port-container--actionInputPort .port.port.connected .port__inner,
.port-container--actionOutputPort .port.connected .port__inner {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50%;
  height: 50%;
  pointer-events: none;
}

.port-container--actionInputPort .port.connected .port__inner:before,
.port-container--actionOutputPort .port.connected .port__inner:before {
  content: "";
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  background-color: #666;
  border-radius: 50%;
  transform: translate(-50%, -50%);
}*/

// CONTROLS
//-----------------------------
.node-control-input,
.node-control-textarea{
  display: block;
  width: 100%;
  border-radius: 5px;
  padding: 5px;
  border: none;
  background-color: #fff;
  resize: none;
}

.node-control-textarea{
  min-height: 150px;
}

.node-control-input:disabled,
.node-control-textarea:disabled{
  color: inherit;
  background-color: #fff;
  opacity: 0.4;
  cursor: pointer;
}

// GUI
//-----------------------------
#diagram-infos {
  position: fixed;
  top: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.2);
  padding: 10px;
  color: #ffffff;
}

#diagram-menu {
  position: fixed;
  top: 50px;
  right: 0;
  background-color: rgba(0, 0, 0, 0.2);
  padding: 10px;
  color: #ffffff;
  display: flex;
  flex-direction: column;
  gap: 10px;
}
